// -- THIS IS NOT AN OFFICIAL CLAUDE FILE ! --

// web-search 🌐
// https://github.com/exa-labs/exa-mcp-server

// documentation retrieval 📚
// https://github.com/upstash/context7
// https://github.com/0xDAEF0F/mcp-rust-docs-embed

// lsp mcp 🔍
// you will need to have `mcp-language-server` installed in your system (requires go)
// `go install github.com/isaacphi/mcp-language-server@latest`
// https://github.com/isaacphi/mcp-language-server

// to generate the `.mcp.json` file at the root of the project:
// 1. enter your api keys and modify the params in the lsp mcp (if desired)
// 2. `npx strip-json-comments-cli mcp-servers.jsonc > .mcp.json` to strip
//		comments from this jsonc file since claude wont be able to parse it
// 3. open claude and you will be prompted to select which mcps you want to enable.
//		you can also run `claude mcp reset-project-choices` to reset the projects mcp

{
	"mcpServers": {
		// very stable 👷
		// awesome for docs. although it retrieves many tokens
		"context7": {
			"args": ["-y", "@upstash/context7-mcp@latest"],
			"command": "/opt/homebrew/bin/bunx"
		},
		// awesome for web search. id say its better than native web search
		"exa": {
			"args": ["-y", "exa-mcp-server", "--tools=web_search_exa,github_search"],
			"command": "/opt/homebrew/bin/bunx",
			"env": {
				"EXA_API_KEY": "<insert-your-api-key-here>"
			}
		},

		// safe to drink 🚰
		// embeds and queries for any rust crates' documentation from "crates.io"
		"rust-docs": {
			"type": "sse",
			"url": "https://mcp-rust-docs-embed-production.up.railway.app/sse"
		},

		// not that stable 🧪
		// leverages native lsp so agents can use lsp tools, e.g., "rename symbol", etc
		"rust-lsp": {
			"args": ["--workspace", "/your/dir/hehe", "--lsp", "rust-analyzer"],
			"command": "mcp-language-server"
		},
		"ts-lsp": {
			"args": [
				"--workspace",
				"/your/dir/hehe",
				"--lsp",
				"typescript-language-server",
				"--",
				"--stdio"
			],
			"command": "mcp-language-server"
		}
	}
}
